<?php
/**
 * Plugin Name: Yoast SEO API Manager v1.3
 * Description: Manage Yoast SEO titles, meta descriptions, and focus keyphrases via a REST API endpoint. Uses WordPress authentication.
 * Version: 1.3
 * Author: Phil - https://inforeole.fr (Adapted by Expert n8n, extended by Ralph Jayson Lucban)
 * License: GPLv2 or later
 */

if ( ! defined( 'ABSPATH' ) ) {
    exit; // Exit if accessed directly.
}

class Yoast_API_Manager {

    public function __construct() {
        add_action('rest_api_init', array($this, 'register_api_routes'));
    }

    /**
     * Registers the REST API route to update Yoast meta fields.
     */
    public function register_api_routes() {
        register_rest_route( 'yoast-api/v1', '/update-meta', array(
            'methods'             => 'POST',
            'callback'            => array($this, 'update_yoast_meta'),
            'permission_callback' => array($this, 'check_route_permission'),
            'args'                => array(
                'post_id' => array(
                    'required'          => true,
                    'validate_callback' => function( $param ) {
                        $post = get_post( (int) $param );
                        if ( ! $post ) {
                            return false;
                        }
                        $allowed_post_types = class_exists('WooCommerce') ? array('post', 'product') : array('post');
                        return in_array($post->post_type, $allowed_post_types, true);
                    },
                    'sanitize_callback' => 'absint',
                ),
                'yoast_title' => array(
                    'type'              => 'string',
                    'sanitize_callback' => 'sanitize_text_field',
                ),
                'yoast_description' => array(
                    'type'              => 'string',
                    'sanitize_callback' => 'sanitize_text_field',
                ),
                'yoast_focuskw' => array(
                    'type'              => 'string',
                    'sanitize_callback' => 'sanitize_text_field',
                ),
            ),
        ) );
    }

    /**
     * Updates the Yoast meta fields for a specific post.
     *
     * @param WP_REST_Request $request The REST API request instance.
     * @return WP_REST_Response|WP_Error Response object on success, or WP_Error on failure.
     */
    public function update_yoast_meta( WP_REST_Request $request ) {
        $post_id = $request->get_param('post_id');

        if ( ! current_user_can('edit_post', $post_id) ) {
            return new WP_Error(
                'rest_forbidden',
                'You do not have permission to edit this post.',
                array('status' => 403)
            );
        }

        // Map API parameters to Yoast database meta keys
        $fields_map = array(
            'yoast_title'       => '_yoast_wpseo_title',
            'yoast_description' => '_yoast_wpseo_metadesc',
            'yoast_focuskw'     => '_yoast_wpseo_focuskw',
        );

        $results = array();
        $updated = false;

        foreach ( $fields_map as $param_name => $meta_key ) {
            if ( $request->has_param( $param_name ) ) {
                $value = $request->get_param( $param_name );
                update_post_meta( $post_id, $meta_key, $value );
                $results[$param_name] = 'updated';
                $updated = true;
            }
        }

        if ( ! $updated ) {
            return new WP_Error(
                'no_fields_provided',
                'No Yoast fields were provided for update.',
                array('status' => 400)
            );
        }

        return new WP_REST_Response( $results, 200 );
    }

    /**
     * Checks if the current user has permission to access the REST API route.
     *
     * @return bool
     */
    public function check_route_permission() {
        return current_user_can( 'edit_posts' );
    }
}

new Yoast_API_Manager();
